Filename: /home/krugloff/PycharmProjects/algorithms/lesson_060/task_01_1.py

Line #    Mem usage    Increment   Line Contents
================================================
     8  14.394531 MiB  14.394531 MiB   @profile(precision=6, stream=fp)
     9                             def eratosthenes(n):
    10  14.394531 MiB   0.000000 MiB       a = [0] * n  # создание массива с n количеством элементов
    11  14.750000 MiB   0.000000 MiB       for i in range(n):  # заполнение массива ...
    12  14.750000 MiB   0.355469 MiB           a[i] = i  # значениями от 0 до n-1
    13                             
    14                                 # вторым элементом является единица, которую не считают простым числом
    15                                 # забиваем ее нулем.
    16  14.750000 MiB   0.000000 MiB       a[1] = 0
    17                             
    18  14.750000 MiB   0.000000 MiB       m = 2  # замена на 0 начинается с 3-го элемента (первые два уже нули)
    19  14.750000 MiB   0.000000 MiB       while m < n:  # перебор всех элементов до заданного числа
    20  14.750000 MiB   0.000000 MiB           if a[m] != 0:  # если он не равен нулю, то
    21  14.750000 MiB   0.000000 MiB               j = m * 2  # увеличить в два раза (текущий элемент простое число)
    22  14.750000 MiB   0.000000 MiB               while j < n:
    23  14.750000 MiB   0.000000 MiB                   a[j] = 0  # заменить на 0
    24  14.750000 MiB   0.000000 MiB                   j = j + m  # перейти в позицию на m больше
    25  14.750000 MiB   0.000000 MiB           m += 1
    26                             
    27                                 # вывод простых чисел на экран (может быть реализован как угодно)
    28  14.750000 MiB   0.000000 MiB       b = []
    29  14.750000 MiB   0.000000 MiB       for i in a:
    30  14.750000 MiB   0.000000 MiB           if a[i] != 0:
    31  14.750000 MiB   0.000000 MiB               b.append(a[i])
    32                             
    33  14.750000 MiB   0.000000 MiB       del a
    34  14.750000 MiB   0.000000 MiB       return b


